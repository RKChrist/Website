@{
    Layout = "_Subpages";
}
<style type="text/css">

    ol {
        margin: 0;
        padding: 0
    }

    table td, table th {
        padding: 0
    }

    .c9 {
        border-right-style: solid;
        padding: 5pt 5pt 5pt 5pt;
        border-bottom-color: #000000;
        border-top-width: 0pt;
        border-right-width: 0pt;
        border-left-color: #000000;
        vertical-align: top;
        border-right-color: #000000;
        border-left-width: 0pt;
        border-top-style: solid;
        background-color: #f8f8f8;
        border-left-style: solid;
        border-bottom-width: 0pt;
        width: 451.4pt;
        border-top-color: #000000;
        border-bottom-style: solid
    }

    .c0 {
        background-color: #f8f8f8;
        color: #333333;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 10.5pt;
        font-family: "Consolas";
        font-style: normal
    }

    .c6 {
        color: #000000;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 11pt;
        font-family: "Arial";
        font-style: normal
    }

    .c2 {
        color: #d4d4d4;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 10.5pt;
        font-family: "Courier New";
        font-style: normal
    }

    .c8 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #9cdcfe;
        font-weight: 400
    }

    .c13 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #d4d4d4;
        font-weight: 400
    }

    .c16 {
        padding-top: 20pt;
        padding-bottom: 6pt;
        line-height: 1.15;
        page-break-after: avoid;
        text-align: center
    }

    .c1 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #dd1144;
        font-weight: 400
    }

    .c17 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #008080;
        font-weight: 400
    }

    .c10 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #333333;
        font-weight: 700
    }

    .c15 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #4ec9b0;
        font-weight: 400
    }

    .c3 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #333333;
        font-weight: 400
    }

    .c4 {
        padding-top: 0pt;
        padding-bottom: 0pt;
        line-height: 1.15;
        text-align: left
    }

    .c11 {
        border-spacing: 0;
        border-collapse: collapse;
        margin-right: auto
    }

    .c19 {
        color: #000000;
        font-weight: 400;
        font-size: 20pt;
        font-family: "Arial"
    }

    .c12 {
        background-color: #ffffff;
        max-width: 451.4pt;
        padding: 72pt 72pt 72pt 72pt
    }

    .c18 {
        text-decoration: none;
        vertical-align: baseline;
        font-style: normal
    }

    .c7 {
        orphans: 2;
        widows: 2
    }

    .c5 {
        height: 11pt
    }

    .c14 {
        height: 0pt
    }

    .title {
        padding-top: 0pt;
        color: #000000;
        font-size: 26pt;
        padding-bottom: 3pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    .subtitle {
        padding-top: 0pt;
        color: #666666;
        font-size: 15pt;
        padding-bottom: 16pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    li {
        color: #000000;
        font-size: 11pt;
        font-family: "Arial"
    }

    p {
        margin: 0;
        color: #000000;
        font-size: 11pt;
        font-family: "Arial"
    }

    h1 {
        padding-top: 20pt;
        color: #000000;
        font-size: 20pt;
        padding-bottom: 6pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h2 {
        padding-top: 18pt;
        color: #000000;
        font-size: 16pt;
        padding-bottom: 6pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h3 {
        padding-top: 16pt;
        color: #434343;
        font-size: 14pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h4 {
        padding-top: 14pt;
        color: #666666;
        font-size: 12pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h5 {
        padding-top: 12pt;
        color: #666666;
        font-size: 11pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h6 {
        padding-top: 12pt;
        color: #666666;
        font-size: 11pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        font-style: italic;
        orphans: 2;
        widows: 2;
        text-align: left
    }
</style>
<div class="c12">
    <h1 class="c7 c16" id="h.ibl78q1862sv"><span class="c18 c19">Producer</span></h1><p class="c4 c7"><span class="c6">Imports:</span></p><a id="t.7e7534b1084337d17009b418eb095575e83c97f9"></a><a id="t.0"></a><table class="c11"><tr class="c14"><td class="c9" colspan="1" rowspan="1"><p class="c4"><span class="c10">from</span><span class="c3">&nbsp;fileinput import filename<br></span><span class="c10">from</span><span class="c3">&nbsp;random import randint<br></span><span class="c10">from</span><span class="c3">&nbsp;kafka import KafkaProducer, TopicPartition<br></span><span class="c10">from</span><span class="c3">&nbsp;fastapi import FastAPI, WebSocket<br>import json<br></span><span class="c10">from</span><span class="c3">&nbsp;pydantic import BaseModel<br></span><span class="c10">from</span><span class="c3">&nbsp;ast import dump<br>import logging as log<br></span><span class="c10">from</span><span class="c3">&nbsp;pathlib import Path<br>import base64<br></span><span class="c10">from</span><span class="c3">&nbsp;typing import Optional<br>import random<br>import string<br><br>app = FastAPI()</span></p></td></tr></table><p class="c4 c7 c5"><span class="c6"></span></p><p class="c4 c7 c5"><span class="c6"></span></p><p class="c4 c7"><span class="c6">Hvis den fungere s&aring; sender den en succes:</span></p><a id="t.2e7a840f73d4fe45607456425a7ae623723bf6d5"></a><a id="t.1"></a><table class="c11"><tr class="c14"><td class="c9" colspan="1" rowspan="1"><p class="c4"><span class="c3">def on_send_success(record_metadata):<br> &nbsp; &nbsp;print(record_metadata.topic)<br> &nbsp; &nbsp;print(record_metadata.partition)<br> &nbsp; &nbsp;print(record_metadata.offset)<br> &nbsp; &nbsp;print(</span><span class="c1">&quot;Sent&quot;</span><span class="c0">)</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c3">Hvis den ikke fungere s&aring; sender den en error:<br>def on_send_error(excp):<br> &nbsp; &nbsp;log.error(</span><span class="c1">&#39;I am an errback&#39;</span><span class="c3">, exc_info=excp)<br> &nbsp; &nbsp;print(</span><span class="c1">&quot;Ikke Sent&quot;</span><span class="c0">)</span></p></td></tr></table><p class="c4 c7 c5"><span class="c6"></span></p><p class="c4 c7"><span class="c6">S&aring; opretter den en ny producer:</span></p><p class="c4"><span class="c3">producer = KafkaProducer(<br> &nbsp; value_serializer=lambda value: json.dumps(value).encode(</span><span class="c1">&#39;utf-8&#39;</span><span class="c3">),<br> &nbsp; bootstrap_servers=[</span><span class="c1">&#39;kafka-server1:9092&#39;</span><span class="c3">],<br> &nbsp; retries=</span><span class="c17">5</span><span class="c3">,<br> &nbsp; key_serializer=lambda x: json.dumps(x).encode(</span><span class="c1">&quot;utf-8&quot;</span><span class="c3">), max_request_size=</span><span class="c17">101626282</span><span class="c3">, buffer_memory=</span><span class="c17">101626282</span><span class="c0"><br> &nbsp; )</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c0">S&aring; opretter den en basemodel:</span></p><p class="c4"><span class="c0">class jsonObjectOut(BaseModel):<br> &nbsp; &nbsp; filename: str<br> &nbsp; &nbsp; createddate: str<br> &nbsp; &nbsp; data: Optional[bytes]<br> &nbsp; &nbsp; filetype: str<br> &nbsp; &nbsp; version: int<br> &nbsp; &nbsp; createdby: str</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c0">Test rute:</span></p><p class="c4"><span class="c3">app.get(</ span >< span class="c1">&quot;/&quot;</span><span class="c3">)<br>async def root():<br> &nbsp; &nbsp;return {</span><span class="c1">&quot;message&quot;</span><span class="c3">: </span><span class="c1">&quot;Hello World&quot;</span><span class="c0">}&rsquo;</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c3">S&aring; opretter den ruten:<br>app.post(</span><span class="c1">&quot;/kafka/&quot;</span><span class="c0">, response_model=jsonObjectOut)<br>async def post(item: jsonObjectOut):</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c3">Hvor den s&aring; finder en pdf der er gemt i backend:<br></span><span class="c8">base_path</span><span class="c13">&nbsp;= </span><span class="c15">Path</span><span class="c13">(</span><span class="c8">__file__</span><span class="c13">).</span><span class="c8 c18">parent</span></p><a id="t.235db1af29c02114ff3ef1cbdcc17d52384f3769"></a><a id="t.2"></a><table class="c11"><tr class="c14"><td class="c9" colspan="1" rowspan="1"><p class="c4"><span class="c3">&nbsp; &nbsp; files_path = (base_path / </span><span class="c1">&quot;Percy Jackson &amp; the Olympians 01 - The Lightning Thief.pdf&quot;</span><span class="c3">).resolve()<br> &nbsp; &nbsp;data = open(files_path, </span><span class="c1">&#39;rb&#39;</span><span class="c0">)</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c0">S&aring; laver den en json string til et topic:</span></p><p class="c4"><span class="c3">mytopic = </span><span class="c1">&quot;json_topic&quot;</span><span class="c3"><br> &nbsp; &nbsp;jsonstring = [{</span><span class="c1">&quot;filename&quot;</span><span class="c3">: item.filename,<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="c1">&quot;createddate&quot;</span><span class="c3">: item.createddate,<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="c1">&quot;data&quot;</span><span class="c3">: (data.read()).decode(</span><span class="c1">&quot;latin-1&quot;</span><span class="c3">),<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="c1">&quot;filetype&quot;</span><span class="c3">: item.filetype,<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="c1">&quot;version&quot;</span><span class="c3">&nbsp;: item.version,<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="c1">&quot;createdby&quot;</span><span class="c0">:item.createdby}]</span></p><p class="c4 c5"><span class="c0"></span></p><p class="c4 c5"><span class="c0"></span></p></td></tr></table><p class="c4 c5"><span class="c0"></span></p><p class="c4"><span class="c0">S&aring; sender den beskenden til kafka og hvis der er resterende beskeder i pipelinen, s&aring; s&oslash;rger den ogs&aring; for at smide dem ud:</span></p><p class="c4"><span class="c3">producer.send(topic=mytopic, value=jsonstring[</span><span class="c17">0</span><span class="c3">], key=</span><span class="c1">&#39;&#39;</span><span class="c3">.join(random.choice(string.ascii_letters) for i in range(</span><span class="c17">20</span><span class="c3">))).add_callback(on_send_success).add_errback(on_send_error)<br> &nbsp; &nbsp;producer.flush(timeout=</span><span class="c17">100</span><span class="c0">)<br> &nbsp; <br> &nbsp; &nbsp;return item</span></p><p class="c4 c5"><span class="c0"></span></p>
</div>