@{
    Layout = "_Subpages";
}
<style type="text/css">
    ol {
        margin: 0;
        padding: 0
    }

    table td, table th {
        padding: 0
    }

    .c3 {
        background-color: #f8f8f8;
        color: #333333;
        font-weight: 700;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 11pt;
        font-family: "Consolas";
        font-style: normal
    }

    .c1 {
        color: #000000;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 11pt;
        font-family: "Arial";
        font-style: normal
    }

    .c8 {
        background-color: #f8f8f8;
        color: #999988;
        font-weight: 400;
        font-size: 10.5pt;
        font-family: "Consolas";
        font-style: italic
    }

    .c0 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #333333;
        font-weight: 400
    }

    .c12 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #008080;
        font-weight: 400
    }

    .c11 {
        padding-top: 20pt;
        padding-bottom: 6pt;
        line-height: 1.15;
        page-break-after: avoid;
        text-align: center
    }

    .c2 {
        padding-top: 0pt;
        padding-bottom: 0pt;
        line-height: 1.15;
        text-align: left;
        height: 11pt
    }

    .c6 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #dd1144;
        font-weight: 400
    }

    .c4 {
        padding-top: 0pt;
        padding-bottom: 0pt;
        line-height: 1.15;
        text-align: left
    }

    .c10 {
        color: #000000;
        font-weight: 400;
        font-size: 20pt;
        font-family: "Arial"
    }

    .c5 {
        text-decoration: none;
        vertical-align: baseline;
        font-style: normal
    }

    .c9 {
        background-color: #ffffff;
        max-width: 451.4pt;
        padding: 72pt 72pt 72pt 72pt
    }

    .c7 {
        orphans: 2;
        widows: 2
    }

    .title {
        padding-top: 0pt;
        color: #000000;
        font-size: 26pt;
        padding-bottom: 3pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    .subtitle {
        padding-top: 0pt;
        color: #666666;
        font-size: 15pt;
        padding-bottom: 16pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    li {
        color: #000000;
        font-size: 11pt;
        font-family: "Arial"
    }

    p {
        margin: 0;
        color: #000000;
        font-size: 11pt;
        font-family: "Arial"
    }

    h1 {
        padding-top: 20pt;
        color: #000000;
        font-size: 20pt;
        padding-bottom: 6pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h2 {
        padding-top: 18pt;
        color: #000000;
        font-size: 16pt;
        padding-bottom: 6pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h3 {
        padding-top: 16pt;
        color: #434343;
        font-size: 14pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h4 {
        padding-top: 14pt;
        color: #666666;
        font-size: 12pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h5 {
        padding-top: 12pt;
        color: #666666;
        font-size: 11pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h6 {
        padding-top: 12pt;
        color: #666666;
        font-size: 11pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        font-style: italic;
        orphans: 2;
        widows: 2;
        text-align: left
    }
</style>
<div class="c9">
    <h1 class="c7 c11" id="h.n9e7f0j9ghmi"><span class="c5 c10">Consumer</span></h1><p class="c2 c7"><span class="c1"></span></p><p class="c2 c7"><span class="c1"></span></p><p class="c4 c7"><span class="c1">F&oslash;rst inds&aelig;tter vi vores imports</span></p><p class="c4"><span class="c3">from kafka import KafkaConsumer, TopicPartition<br>from fastapi import FastAPI<br>import json<br>from pydantic import BaseModel<br>from typing import Optional</span></p><p class="c2"><span class="c3"></span></p><p class="c4 c7"><span class="c1">S&aring; opretter vi en api ud fra en base model:</span></p><p class="c4"><span class="c0 c5">app = FastAPI()<br><br>class jsonObjectOut(BaseModel):<br> &nbsp; &nbsp; filename: str<br> &nbsp; &nbsp; createddate: str<br> &nbsp; &nbsp; data: Optional[bytes]<br> &nbsp; &nbsp; filetype: str<br> &nbsp; &nbsp; version: int<br> &nbsp; &nbsp; createdby: str</span></p><p class="c2"><span class="c0 c5"></span></p><p class="c2"><span class="c0 c5"></span></p><p class="c2"><span class="c0 c5"></span></p><p class="c4"><span class="c0 c5">Hvor vi s&aring; ops&aelig;tter vores rute:</span></p><p class="c4"><span class="c0">app.get(</ span >< span class="c6">&#39;/kafka/&#39;</span><span class="c0 c5">)<br>async def get_messages():<br> &nbsp; &nbsp;result = []<br> &nbsp; &nbsp;newresult = kafkaConsumer(result) &nbsp;<br> &nbsp; &nbsp;return newresult</span></p><p class="c2"><span class="c0 c5"></span></p><p class="c2"><span class="c0 c5"></span></p><p class="c4"><span class="c0 c5">Hvor vi s&aring; decoder vores kafka output:</span></p><p class="c4"><span class="c0">def kafkaConsumer(result):<br> &nbsp; &nbsp;</span><span class="c8"># To consume latest messages and auto-commit offsets</span><span class="c0"><br> &nbsp; &nbsp;consumer = KafkaConsumer(bootstrap_servers=[</span><span class="c6">&#39;kafka-server1:9092&#39;</span><span class="c0">],<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># &nbsp;value_deserializer=lambda m: json.loads(m.decode(&#39;utf-8&#39;)),</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sasl_mechanism=</span><span class="c6">&quot;PLAIN&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; auto_offset_reset=</span><span class="c6">&#39;earliest&#39;</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;)<br><br><br> &nbsp; &nbsp;par = TopicPartition(topic=</span><span class="c6">&#39;json_topic&#39;</span><span class="c0">, partition=</span><span class="c12">2</span><span class="c0">)<br> &nbsp; &nbsp;consumer.assign([par])<br> &nbsp; &nbsp;consumer.seek(par, </span><span class="c12">0</span><span class="c0">)<br> &nbsp; <br> &nbsp; &nbsp;for item in consumer:<br> &nbsp; &nbsp; &nbsp; &nbsp;val = item.value.decode(</span><span class="c6">&#39;utf-8&#39;</span><span class="c0">)<br> &nbsp; &nbsp; &nbsp; &nbsp;result = val<br> &nbsp; &nbsp; &nbsp; &nbsp;break<br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># result.append({&quot;filename&quot;: item.value.filename,</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># &nbsp; &nbsp; &nbsp;&quot;createddate&quot;: item.value.createddate,</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># &nbsp; &nbsp; &nbsp;&quot;data&quot;: item.value.data.decode(&quot;utf-8&quot;),</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># &nbsp; &nbsp; &nbsp;&quot;filetype&quot;: item.value.filetype,</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># &nbsp; &nbsp; &nbsp;&quot;version&quot; : item.value.version,</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># &nbsp; &nbsp; &nbsp;&quot;createdby&quot;:item.value.createdby})</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># count = count + 1</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c8"># print(count)</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; <br> &nbsp; &nbsp; &nbsp; <br> &nbsp; &nbsp;print(</span><span class="c6">&quot;works&quot;</span><span class="c0 c5">)<br> &nbsp; &nbsp;return result</span></p>
</div>
