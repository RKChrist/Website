@{
    Layout = "_Subpages";
}
<style type="text/css">

    ul.lst-kix_rlol0sm7zdx6-3 {
        list-style-type: none
    }

    .lst-kix_rlol0sm7zdx6-4 > li:before {
        content: "-  "
    }

    ul.lst-kix_rlol0sm7zdx6-4 {
        list-style-type: none
    }

    ul.lst-kix_rlol0sm7zdx6-1 {
        list-style-type: none
    }

    .lst-kix_rlol0sm7zdx6-3 > li:before {
        content: "-  "
    }

    .lst-kix_rlol0sm7zdx6-5 > li:before {
        content: "-  "
    }

    .lst-kix_cpf2hosmxzql-1 > li:before {
        content: "\0025cb  "
    }

    ul.lst-kix_rlol0sm7zdx6-2 {
        list-style-type: none
    }

    .lst-kix_rlol0sm7zdx6-2 > li:before {
        content: "-  "
    }

    .lst-kix_rlol0sm7zdx6-6 > li:before {
        content: "-  "
    }

    ul.lst-kix_rlol0sm7zdx6-0 {
        list-style-type: none
    }

    .lst-kix_cpf2hosmxzql-2 > li:before {
        content: "\0025a0  "
    }

    .lst-kix_rlol0sm7zdx6-0 > li:before {
        content: "-  "
    }

    .lst-kix_rlol0sm7zdx6-8 > li:before {
        content: "-  "
    }

    .lst-kix_rlol0sm7zdx6-1 > li:before {
        content: "-  "
    }

    .lst-kix_rlol0sm7zdx6-7 > li:before {
        content: "-  "
    }

    .lst-kix_cpf2hosmxzql-0 > li:before {
        content: "\0025cf  "
    }

    .lst-kix_cpf2hosmxzql-7 > li:before {
        content: "\0025cb  "
    }

    .lst-kix_cpf2hosmxzql-6 > li:before {
        content: "\0025cf  "
    }

    .lst-kix_cpf2hosmxzql-3 > li:before {
        content: "\0025cf  "
    }

    .lst-kix_cpf2hosmxzql-5 > li:before {
        content: "\0025a0  "
    }

    ul.lst-kix_rlol0sm7zdx6-7 {
        list-style-type: none
    }

    ul.lst-kix_rlol0sm7zdx6-8 {
        list-style-type: none
    }

    ul.lst-kix_rlol0sm7zdx6-5 {
        list-style-type: none
    }

    .lst-kix_cpf2hosmxzql-4 > li:before {
        content: "\0025cb  "
    }

    ul.lst-kix_rlol0sm7zdx6-6 {
        list-style-type: none
    }

    li.li-bullet-0:before {
        margin-left: -18pt;
        white-space: nowrap;
        display: inline-block;
        min-width: 18pt
    }

    .lst-kix_cpf2hosmxzql-8 > li:before {
        content: "\0025a0  "
    }

    ul.lst-kix_cpf2hosmxzql-7 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-6 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-8 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-3 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-2 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-5 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-4 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-1 {
        list-style-type: none
    }

    ul.lst-kix_cpf2hosmxzql-0 {
        list-style-type: none
    }

    ol {
        margin: 0;
        padding: 0
    }

    table td, table th {
        padding: 0
    }

    .c30 {
        border-right-style: solid;
        padding-top: 0pt;
        border-top-width: 0pt;
        border-right-width: 0pt;
        padding-left: 0pt;
        padding-bottom: 7.5pt;
        line-height: 1.6;
        border-left-width: 0pt;
        border-top-style: solid;
        background-color: #ffffff;
        border-left-style: solid;
        border-bottom-width: 0pt;
        border-bottom-style: solid;
        text-align: left;
        padding-right: 0pt
    }

    .c33 {
        border-right-style: solid;
        padding: 5pt 5pt 5pt 5pt;
        border-bottom-color: #000000;
        border-top-width: 0pt;
        border-right-width: 0pt;
        border-left-color: #000000;
        vertical-align: top;
        border-right-color: #000000;
        border-left-width: 0pt;
        border-top-style: solid;
        border-left-style: solid;
        border-bottom-width: 0pt;
        width: 441.4pt;
        border-top-color: #000000;
        border-bottom-style: solid
    }

    .c39 {
        border-right-style: solid;
        padding: 5pt 5pt 5pt 5pt;
        border-bottom-color: #000000;
        border-top-width: 0pt;
        border-right-width: 0pt;
        border-left-color: #000000;
        vertical-align: top;
        border-right-color: #000000;
        border-left-width: 0pt;
        border-top-style: solid;
        border-left-style: solid;
        border-bottom-width: 0pt;
        width: 451.4pt;
        border-top-color: #000000;
        border-bottom-style: solid
    }

    .c3 {
        background-color: #f8f8f8;
        color: #dd1144;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 11pt;
        font-family: "Consolas";
        font-style: normal
    }

    .c1 {
        color: #000000;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 11pt;
        font-family: "Arial";
        font-style: normal
    }

    .c12 {
        color: #333333;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 11pt;
        font-family: "Consolas";
        font-style: normal
    }

    .c5 {
        color: #000000;
        font-weight: 400;
        text-decoration: none;
        vertical-align: baseline;
        font-size: 20pt;
        font-family: "Arial";
        font-style: normal
    }

    .c27 {
        padding-top: 20pt;
        padding-bottom: 6pt;
        line-height: 1.0;
        page-break-after: avoid;
        text-align: left;
        height: 20pt
    }

    .c18 {
        padding-top: -1pt;
        padding-bottom: -1pt;
        line-height: 1.2857142857142858;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    .c17 {
        padding-top: 0pt;
        padding-bottom: 0pt;
        line-height: 1.0;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    .c24 {
        -webkit-text-decoration-skip: none;
        color: #1155cc;
        font-weight: 400;
        text-decoration: underline;
        text-decoration-skip-ink: none;
        font-family: "Consolas"
    }

    .c29 {
        padding-top: 20pt;
        padding-bottom: 6pt;
        line-height: 1.15;
        page-break-after: avoid;
        text-align: left
    }

    .c22 {
        padding-top: 18pt;
        padding-bottom: 6pt;
        line-height: 1.0;
        page-break-after: avoid;
        text-align: left
    }

    .c38 {
        padding-top: 20pt;
        padding-bottom: 6pt;
        line-height: 1.15;
        page-break-after: avoid;
        text-align: center
    }

    .c37 {
        padding-top: 20pt;
        padding-bottom: 6pt;
        line-height: 1.0;
        page-break-after: avoid;
        text-align: left
    }

    .c13 {
        background-color: #f8f8f8;
        color: #999988;
        font-weight: 400;
        font-family: "Consolas";
        font-style: italic
    }

    .c26 {
        background-color: #ffffff;
        color: #000000;
        font-weight: 400;
        font-size: 13.5pt;
        font-family: "Merriweather"
    }

    .c36 {
        background-color: #ffffff;
        color: #666666;
        font-weight: 400;
        font-size: 13.5pt;
        font-family: "Merriweather"
    }

    .c2 {
        background-color: #f8f8f8;
        font-size: 10.5pt;
        font-family: "Consolas";
        color: #dd1144;
        font-weight: 400
    }

    .c19 {
        padding-top: 18pt;
        padding-bottom: 6pt;
        line-height: 1.15;
        page-break-after: avoid;
        text-align: left
    }

    .c11 {
        background-color: #f8f8f8;
        font-family: "Consolas";
        color: #dd1144;
        font-weight: 400
    }

    .c20 {
        color: #000000;
        font-weight: 400;
        font-size: 16pt;
        font-family: "Arial"
    }

    .c14 {
        background-color: #f8f8f8;
        font-family: "Consolas";
        color: #333333;
        font-weight: 700
    }

    .c0 {
        background-color: #f8f8f8;
        font-family: "Consolas";
        color: #333333;
        font-weight: 400
    }

    .c4 {
        padding-top: 0pt;
        padding-bottom: 0pt;
        line-height: 1.15;
        text-align: left
    }

    .c34 {
        text-decoration-skip-ink: none;
        -webkit-text-decoration-skip: none;
        color: #1155cc;
        text-decoration: underline
    }

    .c7 {
        background-color: #f8f8f8;
        font-family: "Consolas";
        color: #008080;
        font-weight: 400
    }

    .c10 {
        border-spacing: 0;
        border-collapse: collapse;
        margin-right: auto
    }

    .c15 {
        text-decoration: none;
        vertical-align: baseline;
        font-style: normal
    }

    .c32 {
        background-color: #ffffff;
        max-width: 451.4pt;
        padding: 72pt 72pt 72pt 72pt
    }

    .c31 {
        padding: 0;
        margin: 0
    }

    .c25 {
        margin-left: 36pt;
        padding-left: 0pt
    }

    .c21 {
        orphans: 2;
        widows: 2
    }

    .c8 {
        color: inherit;
        text-decoration: inherit
    }

    .c35 {
        height: 20pt
    }

    .c6 {
        font-size: 10.5pt
    }

    .c9 {
        height: 11pt
    }

    .c23 {
        height: 52.7pt
    }

    .c28 {
        height: 7172.2pt
    }

    .c16 {
        background-color: #f8f8f8
    }

    .title {
        padding-top: 0pt;
        color: #000000;
        font-size: 26pt;
        padding-bottom: 3pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    .subtitle {
        padding-top: 0pt;
        color: #666666;
        font-size: 15pt;
        padding-bottom: 16pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    li {
        color: #000000;
        font-size: 11pt;
        font-family: "Arial"
    }

    p {
        margin: 0;
        color: #000000;
        font-size: 11pt;
        font-family: "Arial"
    }

    h1 {
        padding-top: 20pt;
        color: #000000;
        font-size: 20pt;
        padding-bottom: 6pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h2 {
        padding-top: 18pt;
        color: #000000;
        font-size: 16pt;
        padding-bottom: 6pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h3 {
        padding-top: 16pt;
        color: #434343;
        font-size: 14pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h4 {
        padding-top: 14pt;
        color: #666666;
        font-size: 12pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h5 {
        padding-top: 12pt;
        color: #666666;
        font-size: 11pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        orphans: 2;
        widows: 2;
        text-align: left
    }

    h6 {
        padding-top: 12pt;
        color: #666666;
        font-size: 11pt;
        padding-bottom: 4pt;
        font-family: "Arial";
        line-height: 1.15;
        page-break-after: avoid;
        font-style: italic;
        orphans: 2;
        widows: 2;
        text-align: left
    }
</style>

<div class="c32">
    <h1 class="c21 c38" id="h.rnoijqmq4jok"><span class="c5">Ops&aelig;tning af Containere</span></h1><p class="c4 c21"><span class="c1">I dette produkt vil opsat en docker compose fil indeholdende f&oslash;lgende ressourcer:</span></p><ul class="c31 lst-kix_rlol0sm7zdx6-0 start"><li class="c4 c25 c21 li-bullet-0"><span class="c1">Et bridge netv&aelig;rk kaldet kafka-net</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">1 Zookeeper Server</span></li><li class="c4 c21 c25 li-bullet-0"><span class="c1">3 Kafka Broker</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">Kafka Schema registry server</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">Kafka Connect server</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">Apache Cassandra cluster med en node.</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">1 Producer FastAPI lavet i python</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">1 Consumer FastAPI lavet i python</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">1 Kafka broker (create-topics) der lukker efter at den opr&aelig;tter 3 kafka topics.</span></li><li class="c4 c25 c21 li-bullet-0"><span class="c1">1 Kafdrop server, der visuelt fremviser helbreddet p&aring; vores kafka brokers.</span></li></ul><p class="c4 c21 c9"><span class="c1"></span></p><p class="c4 c21 c9"><span class="c1"></span></p><h1 class="c29 c21" id="h.43ampazifvkh"><span class="c5">Bridge Network</span></h1><p class="c4 c21"><span class="c1">Dette g&oslash;r det muligt for vores containere at snakke med hinanden</span></p><a id="t.c1fec5d1cfaa99f463d3025664f2231d39fd5848"></a><a id="t.0"></a><table class="c10"><tr class="c28"><td class="c39" colspan="1" rowspan="1"><p class="c4"><span class="c12">networks:<br> kafka-net:<br> &nbsp; driver: bridge</span></p><p class="c4 c9"><span class="c12"></span></p><p class="c4 c9"><span class="c12"></span></p><p class="c4 c9"><span class="c12"></span></p><h1 class="c29" id="h.6sabcv80b10"><span class="c5">Zookeeper</span></h1><p class="c17"><span class="c1">Kafka deployment which keeps track of the Kafka nodes, topics etc. We are using the confluent docker image (confluentinc/cp-zookeeper) for Zookeeper.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">services:<br> &nbsp;zookeeper-server:<br> &nbsp; &nbsp;image: </span><span class="c2">&#39;confluentinc/cp-zookeeper:latest&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;zookeeper-server&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;zookeeper-server&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;nc -z localhost 2181 || exit 1&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c7 c6">60</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;2181:2181&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- ZOOKEEPER_CLIENT_PORT=</span><span class="c7 c6">2181</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- ZOOKEEPER_SERVER_ID=</span><span class="c7 c6">1</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- ZOO_INIT_LIMIT=</span><span class="c7 c6">100</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- ZOO_TICK_TIME=</span><span class="c7 c15 c6">5000</span></p><p class="c4 c9"><span class="c7 c15 c6"></span></p><h1 class="c30" id="h.djgvftn3wo85"><span class="c5">Kafka brokers</span></h1><p class="c17"><span class="c1">Kafka brokere gemmer messages og topic. Vi bruger confluentinc/cp-kafka docker-billedet til dette.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">Da Kafka brokere i denne ops&aelig;tning af Kafka er afh&aelig;ngige af Zookeeper, instruerer vi docker-compose om at vente p&aring;, at Zookeeper er i gang, f&oslash;r du starter brokerne. Dette er defineret i afsnittet afh&aelig;nger af.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">kafka-server1:<br> &nbsp; &nbsp;image: </span><span class="c2">&#39;confluentinc/cp-kafka:latest&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;kafka-server1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;kafka-server1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;nc -z localhost 9092 || exit 1&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c7 c6">60</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;9092:9092&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;9098:9098&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">expose</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;9098&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT<br> &nbsp; &nbsp; &nbsp;- KAFKA_ZOOKEEPER_CONNECT=</span><span class="c2">&#39;zookeeper-server:2181&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server1:</span><span class="c7 c6">9092</span><span class="c0 c6">, SASL_PLAINTEXT://localhost:</span><span class="c7 c6">9098</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_BROKER_ID=</span><span class="c7 c6">1</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_MESSAGE_MAX_BYTES=</span><span class="c7 c6">101626282</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;</span><span class="c13 c6"># For Security</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;</span><span class="c13 c6"># - ZOOKEEPER_SASL_ENABLED=&#39;FALSE&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;</span><span class="c13 c6"># - KAFKA_SECURITY_INTER_BROKER_PROTOCOL=SASL_PLAINTEXT</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;</span><span class="c13 c6"># - KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;</span><span class="c13 c6"># - KAFKA_SASL_ENABLED_MECHANISMS:PLAIN</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;</span><span class="c6 c13"># - KAFKA_OPTS=&quot;-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf&quot;</span><span class="c0 c6"><br> &nbsp; &nbsp;volumes:<br> &nbsp; &nbsp; &nbsp;- ./security:/etc/kafka/configs<br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server<br><br> &nbsp;kafka-server2:<br> &nbsp; &nbsp;image: </span><span class="c2">&#39;confluentinc/cp-kafka:latest&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;kafka-server2&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;kafka-server2&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;nc -z localhost 9092 || exit 1&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c7 c6">60</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;9093:9092&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT<br> &nbsp; &nbsp; &nbsp;- KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:</span><span class="c7 c6">2181</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server2:</span><span class="c7 c6">9092</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_BROKER_ID=</span><span class="c7 c6">2</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_MESSAGE_MAX_BYTES=</span><span class="c7 c6">101626282</span><span class="c0 c6"><br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server<br><br> &nbsp;kafka-server3:<br> &nbsp; &nbsp;image: </span><span class="c2">&#39;confluentinc/cp-kafka:latest&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;kafka-server3&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;kafka-server3&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;nc -z localhost 9092 || exit 1&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c6 c7">60</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net &nbsp; &nbsp;<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;9094:9092&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT<br> &nbsp; &nbsp; &nbsp;- KAFKA_ZOOKEEPER_CONNECT=zookeeper-server:</span><span class="c7 c6">2181</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server3:</span><span class="c7 c6">9092</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_BROKER_ID=</span><span class="c7 c6">3</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- KAFKA_MESSAGE_MAX_BYTES=</span><span class="c7 c6">101626282</span><span class="c0 c15 c6"><br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server</span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c17"><span class="c1">I forhold til kommentarne, s&aring; kr&aelig;vede det at volume for at holde dataen der. Dog problemet med det var at filerne manglede. Hvilket var p&aring;mindelse til mig selv om de environment variabler der g&oslash;r det muligt at ops&aelig;tte TLS</span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c4 c9"><span class="c7 c15 c6"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><h1 class="c21 c27" id="h.dex8xd8o2bpe"><span class="c5"></span></h1><h1 class="c21 c30" id="h.uyp1qktzp2zd"><span class="c5">Schema registry</span></h1><p class="c17"><span class="c1">Skema registry bruges til at gemme skemaer, der bruges til meddelelser kodet i AVRO, Protobuf og JSON.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">kafka-sr1:<br> &nbsp; &nbsp;image: </span><span class="c2">&#39;confluentinc/cp-schema-registry:latest&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;kafka-sr1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;kafka-sr1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;nc -z kafka-sr1 8081 || exit 1&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c7 c6">60</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net &nbsp; &nbsp;<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;8081:8081&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka-server1:</span><span class="c7 c6">9092</span><span class="c0 c6">,kafka-server2:</span><span class="c7 c6">9092</span><span class="c0 c6">,kafka-server3:</span><span class="c7 c6">9092</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- SCHEMA_REGISTRY_HOST_NAME=kafka-sr1<br> &nbsp; &nbsp; &nbsp;- SCHEMA_REGISTRY_LISTENERS=http://kafka-sr1:</span><span class="c7 c6">8081</span><span class="c0 c15 c6"><br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server</span></p><h1 class="c29 c35" id="h.jsgu4ctl9w0w"><span class="c5"></span></h1><h1 class="c29" id="h.ad5w3yzbnfqc"><span class="c5">Kafka Connect</span></h1><p class="c18"><span class="c1">Kafka connect skriver data til Cassandra .</span></p><p class="c18 c9"><span class="c1"></span></p><a id="t.dd384d1e26cadd1f48fd2ee33e439423c3126930"></a><a id="t.1"></a><table class="c10"><tr class="c23"><td class="c16 c33" colspan="1" rowspan="1"><p class="c4"><span class="c0 c6">&nbsp;kafka-connect1:<br> &nbsp; &nbsp;image: </span><span class="c2">&#39;confluentinc/cp-kafka-connect:latest&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;kafka-connect1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;kafka-connect1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;nc -z localhost 8082 || exit 1&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c7 c6">60</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net &nbsp; &nbsp;<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;8082:8082&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;volumes:<br> &nbsp; &nbsp; &nbsp;- ./vol-kafka-connect-jar:/etc/kafka-connect/jars<br> &nbsp; &nbsp; &nbsp;- ./vol-kafka-connect-conf:/etc/kafka-connect/connectors<br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- CONNECT_BOOTSTRAP_SERVERS=kafka-server1:</span><span class="c7 c6">9092</span><span class="c0 c6">,kafka-server2:</span><span class="c7 c6">9092</span><span class="c0 c6">,kafka-server3:</span><span class="c7 c6">9092</span><span class="c0 c6"><br> &nbsp; &nbsp; &nbsp;- CONNECT_REST_PORT=</span><span class="c7 c6">8082</span><span class="c0 c15 c6"><br> &nbsp; &nbsp; &nbsp;- CONNECT_GROUP_ID=cassandraConnect<br> &nbsp; &nbsp; &nbsp;- CONNECT_CONFIG_STORAGE_TOPIC=cassandraconnect-config<br> &nbsp; &nbsp; &nbsp;- CONNECT_OFFSET_STORAGE_TOPIC=cassandraconnect-offset<br> &nbsp; &nbsp; &nbsp;- CONNECT_STATUS_STORAGE_TOPIC=cassandraconnect-status<br> &nbsp; &nbsp; &nbsp;- CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter<br> &nbsp; &nbsp; &nbsp;- CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter<br> &nbsp; &nbsp; &nbsp;- CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter<br> &nbsp; &nbsp; &nbsp;- CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter<br> &nbsp; &nbsp; &nbsp;- CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false<br> &nbsp; &nbsp; &nbsp;- CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false<br> &nbsp; &nbsp; &nbsp;- CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect<br> &nbsp; &nbsp; &nbsp;- CONNECT_PLUGIN_PATH=/etc/kafka-connect/jars<br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server<br> &nbsp; &nbsp; &nbsp;- kafka-server1<br> &nbsp; &nbsp; &nbsp;- kafka-server2<br> &nbsp; &nbsp; &nbsp;- kafka-server3</span></p></td></tr></table><p class="c4 c21 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4 c9"><span class="c7 c15 c6"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c15 c26"></span></p><p class="c17 c9"><span class="c1"></span></p><h1 class="c37 c21" id="h.7oa0a8c8zh3l"><span class="c5">Cassandra</span></h1><p class="c17"><span class="c1">Data from the Kafka topics are written to Cassandra tables using Kafka Connect.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">cassandra-server1:<br> &nbsp; &nbsp;image: cassandra:latest<br> &nbsp; &nbsp;mem_limit: </span><span class="c7 c6">2</span><span class="c0 c6">g<br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;cassandra-server1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;cassandra-server1&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c14 c6">healthcheck</span><span class="c0 c6">:<br> &nbsp; &nbsp; &nbsp;test: [</span><span class="c2">&quot;CMD-SHELL&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;cqlsh&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;-e&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;describe keyspaces&quot;</span><span class="c0 c6">&nbsp;]<br> &nbsp; &nbsp; &nbsp;interval: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;timeout: </span><span class="c7 c6">5</span><span class="c0 c6">s<br> &nbsp; &nbsp; &nbsp;retries: </span><span class="c7 c6">60</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c13 c6"># command: &quot;bash -c</span><span class="c0 c6"><br> &nbsp; &nbsp;</span><span class="c13 c6"># &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cqlsh -e &#39;CREATE TABLE connect.json_table (userid text PRIMARY KEY, username text, firstname text, lastname text);&#39;&quot;</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&quot;9042:9042&quot;</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;- CASSANDRA_SEEDS=cassandra-server1<br> &nbsp; &nbsp; &nbsp;- CASSANDRA_CLUSTER_NAME=Digitalis<br> &nbsp; &nbsp; &nbsp;- CASSANDRA_DC=DC1<br> &nbsp; &nbsp; &nbsp;- CASSANDRA_RACK=rack1<br> &nbsp; &nbsp; &nbsp;- CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch<br> &nbsp; &nbsp; &nbsp;- CASSANDRA_NUM_TOKENS=</span><span class="c7 c15 c6">128</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">Kommentaren var for at indikere at man m&aring;ske kunne automatisere oprettelsen af tabellerne i Cassandra, da lige nu skal man g&oslash;re det manuelt.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><h1 class="c37 c21" id="h.ry7hymeo5p9m"><span class="c5">Create-topics</span></h1><p class="c17"><span class="c1">Her opretter vi de givne topics i vores kafkabrokers, da vi ikke beh&oslash;ver at k&oslash;re en container efter operationen er udf&oslash;rt. s&aring; lukker den sig selv da den inser at kafka_broker_id ikke er existerende og den ikke kan forbinde til zoo-keeper</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">create-topics:<br> &nbsp; &nbsp;image: confluentinc/cp-kafka:latest<br> &nbsp; &nbsp;hostname: create-topics<br> &nbsp; &nbsp;container_name: create-topics<br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; - kafka-net<br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- kafka-server1<br> &nbsp; &nbsp; &nbsp;- kafka-server2<br> &nbsp; &nbsp; &nbsp;- kafka-server3<br> &nbsp; &nbsp;command: </span><span class="c2">&quot;<br> &nbsp; &nbsp; &nbsp;bash -c &#39;cub kafka-ready -b kafka-server1:9092 1 120 &amp;&amp; \<br> &nbsp; &nbsp; &nbsp;cub kafka-ready -b kafka-server2:9092 1 120 &amp;&amp; \<br> &nbsp; &nbsp; &nbsp;cub kafka-ready -b kafka-server3:9092 1 120 &amp;&amp; \<br> &nbsp; &nbsp; &nbsp;kafka-topics --create --if-not-exists --bootstrap-server kafka-server1:9092 --partitions 3 --replication-factor 3 --topic basic_topic &amp;&amp; \<br> &nbsp; &nbsp; &nbsp;kafka-topics --create --if-not-exists --topic json_topic --bootstrap-server kafka-server1:9092 --partitions 3 --replication-factor 3 <br> &nbsp; &nbsp; &nbsp;&#39;&quot;</span><span class="c0 c15 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;KAFKA_BROKER_ID: ignored<br> &nbsp; &nbsp; &nbsp;KAFKA_ZOOKEEPER_CONNECT: ignored</span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c17 c9"><span class="c1"></span></p><h1 class="c21 c37" id="h.2itiwvqzua2v"><span class="c5">Kafdrop</span></h1><p class="c17"><span class="c1">G&oslash;r det muligt for os at holde os opdateret p&aring; vores kafka-servere ud fra et visuelt perspektiv.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">kafdrop:<br> &nbsp; &nbsp;image: obsidiandynamics/kafdrop:latest<br> &nbsp; &nbsp;container_name: </span><span class="c2">&#39;kafdrop&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;hostname: </span><span class="c2">&#39;kafdrop&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net<br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- kafka-server1<br> &nbsp; &nbsp; &nbsp;- kafka-server2<br> &nbsp; &nbsp; &nbsp;- kafka-server3<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c7 c6">19000</span><span class="c0 c6">:</span><span class="c7 c6">9000</span><span class="c0 c6"><br> &nbsp; &nbsp;environment:<br> &nbsp; &nbsp; &nbsp;KAFKA_BROKERCONNECT: kafka-server1:</span><span class="c7 c6">9092</span><span class="c0 c6">,kafka-server2:</span><span class="c7 c6">9093</span><span class="c0 c6">,kafka-server3:</span><span class="c7 c15 c6">9094</span></p><p class="c4 c9"><span class="c7 c15 c6"></span></p><h1 class="c29" id="h.2pf2nbnp5qqq"><span class="c5">Producer / Consumer</span></h1><p class="c17"><span class="c1">Disse 2 containere er meget det samme,da de begge er python FASTAPI, s&aring; de afh&aelig;nger af zookeeper og kafka til at fungere, da de kan ikke operere hvis de ikke kan inds&aelig;tte data ind i vores system.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c6">&nbsp;producer:<br> &nbsp; &nbsp;build:<br> &nbsp; &nbsp; &nbsp;context: ./producer<br> &nbsp; &nbsp; &nbsp;dockerfile: dockerfile<br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server<br> &nbsp; &nbsp; &nbsp;- kafka-server1<br> &nbsp; &nbsp; &nbsp;- kafka-server2<br> &nbsp; &nbsp; &nbsp;- kafka-server3<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp; - </span><span class="c2">&#39;9999:80&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net &nbsp;<br> &nbsp; <br> &nbsp;consumer:<br> &nbsp; &nbsp;build:<br> &nbsp; &nbsp; &nbsp;context: ./consumer<br> &nbsp; &nbsp; &nbsp;dockerfile: dockerfile<br> &nbsp; &nbsp;depends_on:<br> &nbsp; &nbsp; &nbsp;- zookeeper-server<br> &nbsp; &nbsp; &nbsp;- kafka-server1<br> &nbsp; &nbsp; &nbsp;- kafka-server2<br> &nbsp; &nbsp; &nbsp;- kafka-server3<br> &nbsp; &nbsp;ports:<br> &nbsp; &nbsp; &nbsp;- </span><span class="c2">&#39;10000:80&#39;</span><span class="c0 c6"><br> &nbsp; &nbsp;networks:<br> &nbsp; &nbsp; &nbsp;- kafka-net &nbsp;</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4 c9"><span class="c7 c6 c15"></span></p><p class="c17 c9"><span class="c1"></span></p><h2 class="c21 c22" id="h.sfc23emfdd8d"><span class="c15 c20">Producer / Consumer Dockerfile</span></h2><p class="c17"><span class="c1">Dette er dockerfilen til Producer / Consumer, hvor alt python koden ligger i vores app mappe derinde. hvor vi siger til vores virtualisering at den skal opdatere de pakker vi bruger i vores system og installere de benyttede libraries.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">Hvorefter den i cmd skal k&oslash;re vores API p&aring; port 80. Grunden til at den kan g&oslash;re det er fordi vi har mappet vores port 80 i containeren til en anden port og derfor kan begge Api&rsquo;er fungere seperat.</span></p><p class="c4 c9"><span class="c14 c15 c6"></span></p><p class="c4"><span class="c14 c6">FROM</span><span class="c0 c6">&nbsp;python:</span><span class="c7 c6">3.10</span><span class="c0 c6"><br><br><br></span><span class="c13 c6"># dont write pyc files</span><span class="c0 c6"><br></span><span class="c14 c6">ENV</span><span class="c0 c6">&nbsp;PYTHONDONTWRITEBYTECODE </span><span class="c7 c6">1</span><span class="c0 c6"><br></span><span class="c13 c6"># dont buffer to stdout/stderr</span><span class="c0 c6"><br></span><span class="c14 c6">ENV</span><span class="c0 c6">&nbsp;PYTHONUNBUFFERED </span><span class="c7 c6">1</span><span class="c0 c6"><br><br></span><span class="c14 c6">RUN</span><span class="c0 c6">&nbsp;mkdir /app<br></span><span class="c14 c6">ADD</span><span class="c0 c6">&nbsp;. /app<br><br></span><span class="c14 c6">WORKDIR</span><span class="c0 c6">&nbsp;/app<br></span><span class="c13 c6"># # Update packages</span><span class="c0 c6"><br></span><span class="c14 c6">RUN</span><span class="c0 c6">&nbsp;apt-get update<br></span><span class="c13 c6"># Install dependencies</span><span class="c0 c6"><br></span><span class="c6 c14">COPY</span><span class="c0 c6">&nbsp;requirements.txt .<br></span><span class="c14 c6">RUN</span><span class="c0 c6">&nbsp;pip install --no-cache-dir --upgrade -r requirements.txt<br><br><br></span><span class="c13 c6"># Run the application</span><span class="c0 c6"><br></span><span class="c14 c6">CMD</span><span class="c0 c6">&nbsp;[</span><span class="c2">&quot;uvicorn&quot;</span><span class="c0 c6">,</span><span class="c2">&quot;app.app:app&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;--host&quot;</span><span class="c0 c6">,</span><span class="c2">&quot;0.0.0.0&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;--port&quot;</span><span class="c0 c6">, </span><span class="c2">&quot;80&quot;</span><span class="c0 c15 c6">]</span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><h1 class="c29" id="h.rl379m2qyouv"><span class="c5">Ops&aelig;tning af containere.</span></h1><p class="c17"><span class="c1">Inden du k&oslash;re containerne skal du sikre dig, at containerne er bygget med f&oslash;lgende kommando.</span></p><p class="c4"><span class="c0 c15 c6">docker-compose build</span></p><p class="c17"><span>For at k&oslash;re containere skal du k&oslash;re:</span></p><p class="c4"><span class="c0 c15 c6">docker-compose up -d</span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c17"><span class="c1">S&oslash;rg for, at alle containere er oppe og k&oslash;rer ved hj&aelig;lp af docker-kommandoen:</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0 c15 c6">docker-compose ps</span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c4 c9"><span class="c0 c15 c6"></span></p><p class="c17"><span>I forhold til ops&aelig;tning af containere i andre formater end JSON, s&aring; henvender jeg til f&oslash;lgende</span><span class="c34"><a class="c8" href="https://www.google.com/url?q=https://digitalis.io/blog/apache-cassandra/getting-started-with-kafka-cassandra-connector/&amp;sa=D&amp;source=editors&amp;ust=1655439952803803&amp;usg=AOvVaw23pPGWBGMzrD1Ql7pAkI_8">&nbsp;side</a></span><span class="c1">.</span></p><p class="c17 c9"><span class="c1"></span></p><h2 class="c19" id="h.3b4bczq7oj59"><span class="c20 c15">Ops&aelig;tning af Cassandra.</span></h2><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span>Tilslut til cassandra-beholderen og opret et n&oslash;glerum via </span><span class="c34"><a class="c8" href="https://www.google.com/url?q=https://cassandra.apache.org/doc/latest/tools/cqlsh.html&amp;sa=D&amp;source=editors&amp;ust=1655439952804757&amp;usg=AOvVaw3j-F7exWroVwsXG3iBYdP0">cqlsh</a></span><span class="c1">:</span></p><p class="c4"><span class="c0 c6">$ docker exec -it cassandra-server1 /bin/bash<br>$ cqlsh -e </span><span class="c2 c15">&quot;CREATE KEYSPACE connect WITH replication = {&#39;class&#39;: &#39;NetworkTopologyStrategy&#39;,&#39;DC1&prime;: 1};&quot;</span></p><p class="c4 c9"><span class="c2 c15"></span></p><p class="c4 c9"><span class="c15 c36"></span></p><p class="c17"><span class="c1">Opret f&oslash;rst en tabel i Cassandra for at gemme data fra vores json_topic Kafka-emne.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0">cqlsh -e </span><span class="c11">&quot;CREATE TABLE connect.json_table (userid text PRIMARY KEY, username text, firstname text, lastname text);&quot;</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c12 c16">Forbind nu til Kafka Connect-beholderen for at skabe Cassandra Connect forbindelse:</span></p><p class="c4"><span class="c0"><br></span><span class="c0">$ docker exec -it kafka-connect1 /bin/bash</span></p><p class="c4"><span class="c12 c16"><br>Opret forbindelsen ved hj&aelig;lp af json-connect.json-konfigurationen, som er monteret p&aring; /etc/kafka-connect/connectors/conf/json-connect.json p&aring; containeren:</span></p><p class="c4"><span class="c0"><br>$ curl -X POST -H </span><span class="c11">&quot;Content-Type:application/json&quot;</span><span class="c0">&nbsp;-d </span><span class="c11">&quot;/etc/kafka-connect/connectors/conf/json-connect.json&quot;</span><span class="c0">&nbsp;</span><span class="c11">&quot;</span><span class="c24 c16"><a class="c8" href="https://www.google.com/url?q=http://localhost:8082/connectors&amp;sa=D&amp;source=editors&amp;ust=1655439952806762&amp;usg=AOvVaw2iegHN-2DI7D_YP0W5na21">http://localhost:8082/connectors</a></span><span class="c3">&quot;</span></p><p class="c4 c9"><span class="c3"></span></p><p class="c17"><span class="c1">Connect Configurationen har f&oslash;lgende V&aelig;rdier:</span></p><p class="c4"><span class="c0">{<br> &nbsp; </span><span class="c11">&quot;name&quot;</span><span class="c0">: </span><span class="c11">&quot;cassandra-json-sink&quot;</span><span class="c0">,<br> &nbsp; </span><span class="c11">&quot;config&quot;</span><span class="c0">: {<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;connector.class&quot;</span><span class="c0">: </span><span class="c11">&quot;com.datastax.oss.kafka.sink.CassandraSinkConnector&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;tasks.max&quot;</span><span class="c0">: </span><span class="c11">&quot;1&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;topics&quot;</span><span class="c0">: </span><span class="c11">&quot;json_topic&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;contactPoints&quot;</span><span class="c0">: </span><span class="c11">&quot;cassandra-server1&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;loadBalancing.localDc&quot;</span><span class="c0">: </span><span class="c11">&quot;DC1&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;topic.json_topic.connect.json_table.mapping&quot;</span><span class="c0">: </span><span class="c11">&quot;userid=key, username=value.username, firstname=value.firstname, lastname=value.lastname&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;key.converter&quot;</span><span class="c0">: </span><span class="c11">&quot;org.apache.kafka.connect.storage.StringConverter&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;key.converter.schemas.enable&quot;</span><span class="c0">: false,<br> &nbsp; &nbsp; &nbsp; </span><span class="c11">&quot;value.converter.schemas.enable&quot;</span><span class="c12 c16">: false<br> &nbsp; }<br>}</span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c17"><span class="c1">Kontroller status for containeren, og s&oslash;rg for, at containeren k&oslash;re</span></p><p class="c4"><span class="c0">$ curl -X GET </span><span class="c11">&quot;</span><span class="c16 c24"><a class="c8" href="https://www.google.com/url?q=http://localhost:8082/connectors/cassandra-avro-sink/status&amp;sa=D&amp;source=editors&amp;ust=1655439952809001&amp;usg=AOvVaw2lUtBLVM7SnvRmmQscsbTU">http://localhost:8082/connectors/cassandra-avro-sink/status</a></span><span class="c3">&quot;</span></p><p class="c4 c9"><span class="c3"></span></p><p class="c4 c9"><span class="c3"></span></p><p class="c4 c9"><span class="c3"></span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c17 c9"><span class="c1"></span></p><h1 class="c37 c21" id="h.rkw7n5cf3trv"><span class="c5">K&oslash;r programmet og tjek det virker:</span></h1><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">&Aring;bn nu f&oslash;lgende link</span></p><p class="c4"><span class="c24 c16"><a class="c8" href="https://www.google.com/url?q=http://localhost:9999/docs&amp;sa=D&amp;source=editors&amp;ust=1655439952810512&amp;usg=AOvVaw06TMVDVT6MUgtDSXdM4ERE">http://localhost:9999/docs</a></span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c4"><span class="c12 c16">Hvor du burde se f&oslash;lgende side.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 587.00px; height: 270.67px;"><img alt="" src="~/images/Setup/image3.png" style="width: 587.00px; height: 270.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c17"><span class="c1">Tryk p&aring; /kafka/ -&gt; Try it out -&gt; Execute.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">S&aring; burde programmet sende en besked til kafka.</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">Hvor du s&aring; kan ind p&aring; kafdrop med f&oslash;lgende link:</span></p><p class="c4"><span class="c24 c16"><a class="c8" href="https://www.google.com/url?q=http://localhost:19000/&amp;sa=D&amp;source=editors&amp;ust=1655439952812079&amp;usg=AOvVaw0X7Wp6KIOHJchV6mw6ov5j">http://localhost:19000/</a></span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c17"><span class="c1">Hvor du g&aring;r ind under topics og trykker p&aring; json_topic, s&aring; burde du se f&oslash;lgende side:</span></p><p class="c17"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 587.00px; height: 364.00px;"><img alt="" src="~/images/Setup/image4.png" style="width: 587.00px; height: 364.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">Hvor du kan se under last offset,at der er et 1 tal. Hvor hvis du ser klikker p&aring; f&oslash;lgende link:</span></p><p class="c17"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 587.00px; height: 364.00px;"><img alt="" src="~/images/Setup/image2.png" style="width: 587.00px; height: 364.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">S&aring; burde du se beskeden du har sendt igennem kafka:</span></p><p class="c17"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 587.00px; height: 148.00px;"><img alt="" src="~/images/Setup/image1.png" style="width: 587.00px; height: 148.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17 c9"><span class="c1"></span></p><p class="c17"><span class="c1">Hvilket ogs&aring; burde v&aelig;re kommet i gennem til den anden API p&aring; f&oslash;lgende side:</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c24 c16"><a class="c8" href="https://www.google.com/url?q=http://localhost:10000/kafka&amp;sa=D&amp;source=editors&amp;ust=1655439952814281&amp;usg=AOvVaw3Zc4gcaxvylrVr1thobx4l">http://localhost:10000/kafka</a></span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c17"><span class="c1">Hvis det ikke virker, kan det v&aelig;re en fejl i app beskrivelsen, da det kan v&aelig;re et andet offset, her:</span></p><p class="c17 c9"><span class="c1"></span></p><p class="c4"><span class="c0">def kafkaConsumer(result):<br> &nbsp; &nbsp;</span><span class="c13"># To consume latest messages and auto-commit offsets</span><span class="c0"><br> &nbsp; &nbsp;consumer = KafkaConsumer(bootstrap_servers=[</span><span class="c11">&#39;kafka-server1:9092&#39;</span><span class="c0">],<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c13"># &nbsp;value_deserializer=lambda m: json.loads(m.decode(&#39;utf-8&#39;)),</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sasl_mechanism=</span><span class="c11">&quot;PLAIN&quot;</span><span class="c0">,<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; auto_offset_reset=</span><span class="c11">&#39;earliest&#39;</span><span class="c0"><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;)<br><br><br> &nbsp; &nbsp;par = TopicPartition(topic=</span><span class="c11">&#39;json_topic&#39;</span><span class="c0">, partition=</span><span class="c7">2</span><span class="c0">)<br> &nbsp; &nbsp;consumer.assign([par])<br> &nbsp; &nbsp;consumer.seek(par, </span><span class="c7">0</span><span class="c12 c16">)</span></p><p class="c4 c9"><span class="c12 c16"></span></p><p class="c17"><span class="c1">Hvor du s&aring; skal bygge programmet igen for at k&oslash;re det.<br> &nbsp; </span></p></td></tr></table><p class="c4 c9 c21"><span class="c1"></span></p><p class="c4 c21 c9"><span class="c1"></span></p><p class="c4 c21 c9"><span class="c1"></span></p><p class="c4 c21 c9"><span class="c1"></span></p>
</div>